from classes import AddressBook, Name, Phone, Birthday, Record
from datetime import datetime, timedelta
import difflib

address_book = AddressBook()

# ... попередні функції і код ...

COMMANDS = {
    # ... попередні команди ...
    add_note_handler: ("addnote", "an"),
    show_notes_handler: ("shownotes", "sn"),
    search_notes_handler: ("searchnotes", "findnote", "fn"),
    upcoming_birthdays_handler: ("upcomingbirthdays", "upb"),
}

# ... попередні функції і код ...

def upcoming_birthdays_handler(*args):
    if len(args) == 0:
        return "/// Invalid command. Please provide the number of days for upcoming birthdays."

    try:
        days = int(args[0])
        current_date = datetime.now().date()
        upcoming_birthdays = []

        for contact in address_book.get_all_contacts():
            birthday = contact.birthday
            if birthday:
                days_remaining = (birthday.date - current_date).days
                if 0 <= days_remaining <= days:
                    upcoming_birthdays.append((contact.name, birthday.date))

        if not upcoming_birthdays:
            return f"/// No upcoming birthdays in the next {days} days."
        
        upcoming_birthdays.sort(key=lambda x: x[1])  # Sort by upcoming dates
        output = ["/// Upcoming Birthdays:"]
        for name, date in upcoming_birthdays:
            output.append(f"{name}: {date.strftime('%d.%m.%Y')}")
        return "\n".join(output)
    
    except ValueError:
        return "/// Invalid number of days. Please provide a positive integer."


def main():
    while True:
        user_input = input("/// ---> ")

        cmd, data = parser(user_input)

        if cmd == unknown_handler:
            closest_command = find_closest_command(user_input)
            print(f"/// Invalid command. Did you mean '{closest_command}'?")

        result = cmd(*data)
        try:
            print(result)
        except IndexError:
            print(unknown_handler())

        if cmd == exit_handler:
            address_book.save_data()
            break

if __name__ == "__main__":
    main()


/// How can I help you?
/// ---> add John +1234567890 01.01.1990
/// Contact John: +1234567890 added successfully
/// ---> add Mary +9876543210 15.08.1985
/// Contact Mary: +9876543210 added successfully
/// ---> add Bob +1111111111 05.12.1995
/// Contact Bob: +1111111111 added successfully
/// ---> upcomingbirthdays 7
/// /// No upcoming birthdays in the next 7 days.
/// ---> upcomingbirthdays 30
/// /// Upcoming Birthdays:
/// Mary: 15.08.1985
/// Bob: 05.12.1995
/// ---> upcomingbirthdays 365
/// /// Upcoming Birthdays:
/// John: 01.01.1990
/// Mary: 15.08.1985
/// Bob: 05.12.1995
/// ---> upcomingbirthdays 3650
/// /// Upcoming Birthdays:
/// John: 01.01.1990
/// Mary: 15.08.1985
/// Bob: 05.12.1995
